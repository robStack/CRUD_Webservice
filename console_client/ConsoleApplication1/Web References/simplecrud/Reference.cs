//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
// 
#pragma warning disable 1591

namespace ConsoleApplication1.simplecrud {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="simpleServiceBinding", Namespace="http://localhost/soap/simpleService")]
    public partial class simpleService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback conexionMysqlcreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback conexionMysqlreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback conexionMysqlupdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback conexionMysqldeleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public simpleService() {
            this.Url = global::ConsoleApplication1.Properties.Settings.Default.ConsoleApplication1_simplecrud_simpleService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event conexionMysqlcreateCompletedEventHandler conexionMysqlcreateCompleted;
        
        /// <remarks/>
        public event conexionMysqlreadCompletedEventHandler conexionMysqlreadCompleted;
        
        /// <remarks/>
        public event conexionMysqlupdateCompletedEventHandler conexionMysqlupdateCompleted;
        
        /// <remarks/>
        public event conexionMysqldeleteCompletedEventHandler conexionMysqldeleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/webservice/includes/webservice.php/conexionMysql.create", RequestNamespace="http://localhost/webservice/includes/webservice.php?wsdl", ResponseNamespace="http://localhost/webservice/includes/webservice.php?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string conexionMysqlcreate(string nombre, string telefono, string direccion, string password, string email) {
            object[] results = this.Invoke("conexionMysqlcreate", new object[] {
                        nombre,
                        telefono,
                        direccion,
                        password,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void conexionMysqlcreateAsync(string nombre, string telefono, string direccion, string password, string email) {
            this.conexionMysqlcreateAsync(nombre, telefono, direccion, password, email, null);
        }
        
        /// <remarks/>
        public void conexionMysqlcreateAsync(string nombre, string telefono, string direccion, string password, string email, object userState) {
            if ((this.conexionMysqlcreateOperationCompleted == null)) {
                this.conexionMysqlcreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconexionMysqlcreateOperationCompleted);
            }
            this.InvokeAsync("conexionMysqlcreate", new object[] {
                        nombre,
                        telefono,
                        direccion,
                        password,
                        email}, this.conexionMysqlcreateOperationCompleted, userState);
        }
        
        private void OnconexionMysqlcreateOperationCompleted(object arg) {
            if ((this.conexionMysqlcreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.conexionMysqlcreateCompleted(this, new conexionMysqlcreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/webservice/includes/webservice.php/conexionMysql.read", RequestNamespace="http://localhost/webservice/includes/webservice.php?wsdl", ResponseNamespace="http://localhost/webservice/includes/webservice.php?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string conexionMysqlread() {
            object[] results = this.Invoke("conexionMysqlread", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void conexionMysqlreadAsync() {
            this.conexionMysqlreadAsync(null);
        }
        
        /// <remarks/>
        public void conexionMysqlreadAsync(object userState) {
            if ((this.conexionMysqlreadOperationCompleted == null)) {
                this.conexionMysqlreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconexionMysqlreadOperationCompleted);
            }
            this.InvokeAsync("conexionMysqlread", new object[0], this.conexionMysqlreadOperationCompleted, userState);
        }
        
        private void OnconexionMysqlreadOperationCompleted(object arg) {
            if ((this.conexionMysqlreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.conexionMysqlreadCompleted(this, new conexionMysqlreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/webservice/includes/webservice.php/conexionMysql.update", RequestNamespace="http://localhost/webservice/includes/webservice.php?wsdl", ResponseNamespace="http://localhost/webservice/includes/webservice.php?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string conexionMysqlupdate(int id, string nombre, string telefono, string direccion) {
            object[] results = this.Invoke("conexionMysqlupdate", new object[] {
                        id,
                        nombre,
                        telefono,
                        direccion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void conexionMysqlupdateAsync(int id, string nombre, string telefono, string direccion) {
            this.conexionMysqlupdateAsync(id, nombre, telefono, direccion, null);
        }
        
        /// <remarks/>
        public void conexionMysqlupdateAsync(int id, string nombre, string telefono, string direccion, object userState) {
            if ((this.conexionMysqlupdateOperationCompleted == null)) {
                this.conexionMysqlupdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconexionMysqlupdateOperationCompleted);
            }
            this.InvokeAsync("conexionMysqlupdate", new object[] {
                        id,
                        nombre,
                        telefono,
                        direccion}, this.conexionMysqlupdateOperationCompleted, userState);
        }
        
        private void OnconexionMysqlupdateOperationCompleted(object arg) {
            if ((this.conexionMysqlupdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.conexionMysqlupdateCompleted(this, new conexionMysqlupdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/webservice/includes/webservice.php/conexionMysql.delete", RequestNamespace="http://localhost/webservice/includes/webservice.php?wsdl", ResponseNamespace="http://localhost/webservice/includes/webservice.php?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string conexionMysqldelete(int id) {
            object[] results = this.Invoke("conexionMysqldelete", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void conexionMysqldeleteAsync(int id) {
            this.conexionMysqldeleteAsync(id, null);
        }
        
        /// <remarks/>
        public void conexionMysqldeleteAsync(int id, object userState) {
            if ((this.conexionMysqldeleteOperationCompleted == null)) {
                this.conexionMysqldeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconexionMysqldeleteOperationCompleted);
            }
            this.InvokeAsync("conexionMysqldelete", new object[] {
                        id}, this.conexionMysqldeleteOperationCompleted, userState);
        }
        
        private void OnconexionMysqldeleteOperationCompleted(object arg) {
            if ((this.conexionMysqldeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.conexionMysqldeleteCompleted(this, new conexionMysqldeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void conexionMysqlcreateCompletedEventHandler(object sender, conexionMysqlcreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class conexionMysqlcreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal conexionMysqlcreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void conexionMysqlreadCompletedEventHandler(object sender, conexionMysqlreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class conexionMysqlreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal conexionMysqlreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void conexionMysqlupdateCompletedEventHandler(object sender, conexionMysqlupdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class conexionMysqlupdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal conexionMysqlupdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void conexionMysqldeleteCompletedEventHandler(object sender, conexionMysqldeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class conexionMysqldeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal conexionMysqldeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591